name: release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build Release
    runs-on: windows-latest
    permissions:
      contents: write
    env:
      # msbuild_path: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe
      msvs_version: 2022
      ELECTRON_CACHE: ${{ github.workspace }}/node_modules/.cache/electron
      ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/node_modules/.cache/electron-builder
      
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.9'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      # npm ci 的支持缓存版本，减少在本就性能不佳的 windows runner 上的编译时间
      - id: get-patches-commit-short
        shell: bash
        run: echo "commit=$(git log -1 --format="%H" -- patches)" >> $GITHUB_OUTPUT && cat $GITHUB_OUTPUT
      - uses: AnnAngela/cached_node-modules@v1
        with:
          customVariable: :patches@${{ steps.get-patches-commit-short.outputs.commit }}
          
      - name: Build the native modules
        run: npm run rebuild
        
      - name: Build the app
        run: npm run build
        
      - name: Get the version
        id: appVersion
        shell: bash
        run: echo "appVersion=$(jq -r .version package.json)" >> $GITHUB_OUTPUT && cat $GITHUB_OUTPUT
        
      - name: Show the result
        run: Get-ChildItem -Path release/ -Recurse -Force
          
      - uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.appVersion.outputs.appVersion }}
          artifacts: "release/${{ steps.appVersion.outputs.appVersion }}/Joi-Windows-${{ steps.appVersion.outputs.appVersion }}-Setup.exe"
          token: ${{ secrets.GH_TOKEN }}
